{
"Users": [
{
"id": 1,
"login" :"h1",
"password": "123"
},
{
"id": 2,
"login" :"h2",
"password": "456"
}
]
}
[
  {
    "filename": "CreateGroupScreen.tsx",
    "code": "import React, { useState } from \"react\";\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Dimensions } from \"react-native\";\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst CreateGroupScreen = ({ navigation }) => {\n  const [groupName, setGroupName] = useState(\"Amigo chocolate v2\");\n  const [groupDescription, setGroupDescription] = useState(\"Amanda, Bernardo e Camile estão muito animados para jogar.\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleCreateGroup = () => {\n    if (!groupName.trim() || !groupDescription.trim()) {\n      setErrorMessage(\"Por favor, preencha todos os campos.\");\n      return;\n    }\n\n    // Aqui você pode adicionar a lógica para criar o grupo com os dados inseridos\n    console.log(\"Grupo criado:\");\n    console.log(\"Nome:\", groupName);\n    console.log(\"Descrição:\", groupDescription);\n\n    // Após criar o grupo, você pode adicionar lógica para adicionar o grupo\n    // à lista de grupos existentes ou realizar outras ações necessárias\n\n    // Por enquanto, vamos apenas limpar os campos e navegar de volta\n    setGroupName(\"\");\n    setGroupDescription(\"\");\n    setErrorMessage(\"\");\n    navigation.goBack();\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.photoContainer}></View>\n      <Text style={styles.title}>Criar Grupo</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Nome do Grupo\"\n        placeholderTextColor=\"#ccc\"\n        value={groupName}\n        onChangeText={(text) => setGroupName(text)}\n      />\n      <TextInput\n        style={[styles.input, styles.textArea]}\n        multiline\n        placeholder=\"Descrição do Grupo\"\n        placeholderTextColor=\"#ccc\"\n        value={groupDescription}\n        onChangeText={(text) => setGroupDescription(text)}\n      />\n      {errorMessage ? (\n        <Text style={styles.errorMessage}>{errorMessage}</Text>\n      ) : null}\n      <TouchableOpacity style={styles.button} onPress={handleCreateGroup}>\n        <Text style={styles.buttonText}>Criar Grupo</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.goBackButton}\n        onPress={() => navigation.goBack()}\n      >\n        <Text style={styles.goBackButtonText}>Voltar</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    width: width,\n    paddingHorizontal: 20,\n  },\n  photoContainer: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    backgroundColor: \"#6d4c41\",\n    marginBottom: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n    color: \"#000000\",\n    textAlign: \"center\",\n  },\n  input: {\n    width: \"100%\",\n    height: 50,\n    borderColor: \"#6d4c41\",\n    borderWidth: 1,\n    borderRadius: 10,\n    marginBottom: 20,\n    paddingHorizontal: 15,\n    fontSize: 16,\n    color: \"#000000\",\n  },\n  textArea: {\n    height: 100,\n  },\n  button: {\n    backgroundColor: \"#6d4c41\",\n    width: \"100%\",\n    height: 50,\n    borderRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n  },\n  errorMessage: {\n    color: \"red\",\n    marginBottom: 10,\n    textAlign: \"center\",\n  },\n  goBackButton: {\n    marginTop: 20,\n    backgroundColor: \"#6d4c41\",\n    width: \"100%\",\n    height: 50,\n    borderRadius: 10
